
import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { MapPin, GraduationCap, Target, DollarSign } from "lucide-react";
import { useQuery } from "@tanstack/react-query";
import { supabase } from "@/integrations/supabase/client";

interface StudentPreviewStepProps {
  data: any;
}

export const StudentPreviewStep: React.FC<StudentPreviewStepProps> = ({ data }) => {
  const { data: subjects = [] } = useQuery({
    queryKey: ['subjects'],
    queryFn: async () => {
      const { data, error } = await supabase
        .from('subjects')
        .select('*')
        .eq('is_active', true);
      
      if (error) throw error;
      return data;
    }
  });

  const getEducationalLevelLabel = (level: string) => {
    const levels = {
      'elementary': '–ù–∞—á–∞–ª—å–Ω–∞—è —à–∫–æ–ª–∞',
      'middle': '–°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞',
      'high': '–°—Ç–∞—Ä—à–∞—è —à–∫–æ–ª–∞',
      'university': '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
      'adult': '–í–∑—Ä–æ—Å–ª—ã–π'
    };
    return levels[level as keyof typeof levels] || level;
  };

  const getFormatLabel = (format: string) => {
    const formats = {
      'online': '–û–Ω–ª–∞–π–Ω',
      'offline': '–û—á–Ω–æ',
      'group': '–ì—Ä—É–ø–ø–∞',
      'individual': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ'
    };
    return formats[format as keyof typeof formats] || format;
  };

  const selectedSubjects = subjects.filter(subject => 
    data.subjects?.includes(subject.id)
  );

  return (
    <div className="space-y-6">
      <div className="text-center mb-6">
        <h3 className="text-lg font-semibold mb-2">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è</h3>
        <p className="text-muted-foreground">
          –¢–∞–∫ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤
        </p>
      </div>

      <Card>
        <CardHeader className="pb-4">
          <div className="flex items-center space-x-4">
            <Avatar className="h-16 w-16">
              <AvatarImage src={data.avatarUrl} />
              <AvatarFallback className="text-lg">
                {data.firstName?.[0]}{data.lastName?.[0]}
              </AvatarFallback>
            </Avatar>
            <div className="flex-1">
              <CardTitle className="text-xl">
                {data.firstName} {data.lastName}
              </CardTitle>
              <div className="flex items-center text-muted-foreground mt-1">
                <MapPin className="h-4 w-4 mr-1" />
                {data.city}
              </div>
            </div>
            <Badge variant="secondary" className="bg-green-100 text-green-800">
              –£—á–µ–Ω–∏–∫
            </Badge>
          </div>
        </CardHeader>

        <CardContent className="space-y-6">
          {/* About */}
          <div>
            <h4 className="font-medium mb-2">–û —Å–µ–±–µ</h4>
            <p className="text-muted-foreground">{data.bio}</p>
          </div>

          {/* Education */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="flex items-center space-x-3">
              <GraduationCap className="h-5 w-5 text-primary" />
              <div>
                <p className="text-sm font-medium">–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è</p>
                <p className="text-sm text-muted-foreground">
                  {getEducationalLevelLabel(data.educational_level)}
                </p>
              </div>
            </div>

            <div className="flex items-center space-x-3">
              <Target className="h-5 w-5 text-primary" />
              <div>
                <p className="text-sm font-medium">–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ</p>
                <p className="text-sm text-muted-foreground">{data.school}</p>
              </div>
            </div>
          </div>

          {data.grade && (
            <div>
              <h4 className="font-medium mb-2">–ö–ª–∞—Å—Å/–ö—É—Ä—Å</h4>
              <Badge variant="outline">{data.grade}</Badge>
            </div>
          )}

          {/* Subjects */}
          <div>
            <h4 className="font-medium mb-2">–ü—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è</h4>
            <div className="flex flex-wrap gap-2">
              {selectedSubjects.map((subject) => (
                <Badge key={subject.id} variant="secondary">
                  {subject.name}
                </Badge>
              ))}
            </div>
          </div>

          {/* Preferred Format */}
          <div>
            <h4 className="font-medium mb-2">–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç</h4>
            <div className="flex flex-wrap gap-2">
              {data.preferred_format?.map((format: string) => (
                <Badge key={format} variant="outline">
                  {getFormatLabel(format)}
                </Badge>
              ))}
            </div>
          </div>

          {/* Goals */}
          <div>
            <h4 className="font-medium mb-2">–¶–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è</h4>
            <p className="text-muted-foreground">{data.learning_goals}</p>
          </div>

          {/* Budget */}
          <div className="flex items-center space-x-3">
            <DollarSign className="h-5 w-5 text-primary" />
            <div>
              <p className="text-sm font-medium">–ë—é–¥–∂–µ—Ç –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ</p>
              <p className="text-lg font-semibold text-primary">{data.budget} ‚ÇΩ</p>
            </div>
          </div>
        </CardContent>
      </Card>

      <div className="bg-green-50 p-4 rounded-lg">
        <h4 className="font-medium text-green-900 mb-2">üéâ –ü—Ä–æ—Ñ–∏–ª—å –≥–æ—Ç–æ–≤!</h4>
        <p className="text-sm text-green-800">
          –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤, 
          –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏—è –∏ –Ω–∞—á–∏–Ω–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ!
        </p>
      </div>
    </div>
  );
};
