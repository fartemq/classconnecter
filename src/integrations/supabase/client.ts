
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

// Define the Database interface here since we can't modify types.ts
export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string;
          first_name: string | null;
          last_name: string | null;
          avatar_url: string | null;
          bio: string | null;
          city: string | null;
          phone: string | null;
          role: string | null;
          created_at: string | null;
          updated_at: string | null;
          is_blocked: boolean | null;
        };
        Insert: {
          id: string;
          first_name?: string | null;
          last_name?: string | null;
          avatar_url?: string | null;
          bio?: string | null;
          city?: string | null;
          phone?: string | null;
          role?: string | null;
          created_at?: string | null;
          updated_at?: string | null;
          is_blocked?: boolean | null;
        };
        Update: {
          id?: string;
          first_name?: string | null;
          last_name?: string | null;
          avatar_url?: string | null;
          bio?: string | null;
          city?: string | null;
          phone?: string | null;
          role?: string | null;
          created_at?: string | null;
          updated_at?: string | null;
          is_blocked?: boolean | null;
        };
      };
      admin_logs: {
        Row: {
          id: string;
          admin_id: string;
          action: string;
          target_type: string | null;
          target_id: string | null;
          details: any;
          created_at: string;
        };
        Insert: {
          id?: string;
          admin_id: string;
          action: string;
          target_type?: string | null;
          target_id?: string | null;
          details?: any;
          created_at?: string;
        };
        Update: {
          id?: string;
          admin_id?: string;
          action?: string;
          target_type?: string | null;
          target_id?: string | null;
          details?: any;
          created_at?: string;
        };
      };
      admin_messages: {
        Row: {
          id: string;
          admin_id: string;
          recipient_id: string;
          subject: string | null;
          content: string;
          is_from_admin: boolean | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          admin_id: string;
          recipient_id: string;
          subject?: string | null;
          content: string;
          is_from_admin?: boolean | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          admin_id?: string;
          recipient_id?: string;
          subject?: string | null;
          content?: string;
          is_from_admin?: boolean | null;
          created_at?: string;
        };
      };
      subjects: {
        Row: {
          id: string;
          name: string;
          description: string | null;
          is_active: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          description?: string | null;
          is_active?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          is_active?: boolean;
          created_at?: string;
        };
      };
      messages: {
        Row: {
          id: string;
          sender_id: string;
          receiver_id: string;
          subject: string | null;
          content: string;
          is_read: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          sender_id: string;
          receiver_id: string;
          subject?: string | null;
          content: string;
          is_read?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          sender_id?: string;
          receiver_id?: string;
          subject?: string | null;
          content?: string;
          is_read?: boolean;
          created_at?: string;
        };
      };
      tutor_subjects: {
        Row: {
          id: string;
          tutor_id: string;
          subject_id: string;
          price_per_hour: number | null;
        };
        Insert: {
          id?: string;
          tutor_id: string;
          subject_id: string;
          price_per_hour?: number | null;
        };
        Update: {
          id?: string;
          tutor_id?: string;
          subject_id?: string;
          price_per_hour?: number | null;
        };
      };
      homework: {
        Row: {
          id: string;
          tutor_id: string;
          student_id: string;
          subject_id: string | null;
          title: string;
          description: string | null;
          file_path: string | null;
          due_date: string | null;
          status: string;
          grade: number | null;
          feedback: string | null;
          created_at: string;
          updated_at: string;
          answer: string | null;
          answer_file_path: string | null;
        };
        Insert: {
          id?: string;
          tutor_id: string;
          student_id: string;
          subject_id?: string | null;
          title: string;
          description?: string | null;
          file_path?: string | null;
          due_date?: string | null;
          status?: string;
          grade?: number | null;
          feedback?: string | null;
          created_at?: string;
          updated_at?: string;
          answer?: string | null;
          answer_file_path?: string | null;
        };
        Update: {
          id?: string;
          tutor_id?: string;
          student_id?: string;
          subject_id?: string | null;
          title?: string;
          description?: string | null;
          file_path?: string | null;
          due_date?: string | null;
          status?: string;
          grade?: number | null;
          feedback?: string | null;
          created_at?: string;
          updated_at?: string;
          answer?: string | null;
          answer_file_path?: string | null;
        };
      };
      student_requests: {
        Row: {
          id: string;
          student_id: string;
          tutor_id: string;
          subject_id: string | null;
          status: string;
          message: string | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          student_id: string;
          tutor_id: string;
          subject_id?: string | null;
          status?: string;
          message?: string | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          student_id?: string;
          tutor_id?: string;
          subject_id?: string | null;
          status?: string;
          message?: string | null;
          created_at?: string;
        };
      };
      lessons: {
        Row: {
          id: string;
          tutor_id: string;
          student_id: string;
          subject_id: string | null;
          start_time: string;
          end_time: string;
          status: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          tutor_id: string;
          student_id: string;
          subject_id?: string | null;
          start_time: string;
          end_time: string;
          status?: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          tutor_id?: string;
          student_id?: string;
          subject_id?: string | null;
          start_time?: string;
          end_time?: string;
          status?: string;
          created_at?: string;
          updated_at?: string;
        };
      };
    };
    Views: {};
    Functions: {
      create_homework: {
        Args: {
          tutor_id: string;
          student_id: string;
          subject_id: string;
          title: string;
          description: string;
          file_path: string;
          due_date: string;
        };
        Returns: string;
      };
      log_admin_action: {
        Args: {
          action_text: string;
          target_type_param?: string;
          target_id_param?: string;
          details_param?: any;
        };
        Returns: string;
      };
      block_user: {
        Args: {
          user_id_param: string;
          block_status: boolean;
        };
        Returns: boolean;
      };
      delete_user_profile: {
        Args: {
          user_id_param: string;
        };
        Returns: boolean;
      };
      send_admin_message: {
        Args: {
          recipient_id_param: string;
          subject_param: string;
          content_param: string;
        };
        Returns: string;
      };
    };
    Enums: {};
    CompositeTypes: {};
  };
}

const SUPABASE_URL = (import.meta as any).env?.VITE_SUPABASE_URL || "https://unvkzyztoiirmuevqpyb.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = (import.meta as any).env?.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVudmt6eXp0b2lpcm11ZXZxcHliIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY3MTg5NDcsImV4cCI6MjA2MjI5NDk0N30.lFk8L1PITO2RjwUatPqbY2DhZYqc7J59ap3dB5V3YgA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof window !== 'undefined' ? window.localStorage : undefined,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  }
});
